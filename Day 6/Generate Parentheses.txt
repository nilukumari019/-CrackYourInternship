class Solution {
public:
bool isValid(string& str)
{
    int cnt=0;
    for(int i=0;i<str.length();i++)
    {
        if(str[i]=='(')
        cnt++;
        else{
            cnt--;
            if(cnt<0)
            return false;
        }
    }
    return cnt==0;
}
    void solve(string & str,int n,vector<string>&v)
    {
        if(str.length()==2*n)
        {
            if(isValid(str))
            v.push_back(str);
            return;
        }
        str.push_back('(');
        solve(str,n,v);
        str.pop_back();
        str.push_back(')');
        solve(str,n,v);
        str.pop_back();
    }
    vector<string> generateParenthesis(int n) {
        vector<string>v;
        string curr="";
        solve(curr,n,v);
        return v;
        
    }
};