class Solution {
public:
int n,m;
    void find(int i,int j,vector<vector<int>>&temp,vector<vector<int>>&board)
    {
        int dx[8]={-1,-1,-1,0,1,1,1,0};
        int dy[8]={-1,0,1,1,1,0,-1,-1};
        int cnt1=0;
        for(int k=0;k<8;k++)
        {
            int new_x=dx[k]+i;
            int new_y=dy[k]+j;
            if(new_x>=0&& new_x<n && new_y>=0 && new_y<m  )
            {
                cnt1+=board[new_x][new_y];
            }
        }
        if(board[i][j]==1 && (cnt1==2|| cnt1==3))
        temp[i][j]=1;
        else if(board[i][j]==0 && cnt1==3)
        temp[i][j]=1;
        else
        temp[i][j]=0;
       
    }
    void gameOfLife(vector<vector<int>>& board) {
        n=board.size();
        m=board[0].size();
        vector<vector<int>>temp(n,vector<int>(m,0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                find(i,j,temp,board);
            }
        }
        board=temp;
        
    }
};