/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* res=new ListNode(-1);
        ListNode* ans=res;
        int carry=0;
        while(l1 && l2)
        {
            int sum=l1->val+l2->val+carry;
            int rem=sum%10;
            carry=sum/10;
            ListNode*temp=new ListNode(rem);
            res->next=temp;
            res=res->next;
            l1=l1->next;
            l2=l2->next;
        }
        while(l1)
        {
            if(carry)
            {
            int sum=l1->val+carry;
            int rem=sum%10;
            carry=sum/10;
            ListNode*temp=new ListNode(rem);
            res->next=temp;
            res=res->next;
            l1=l1->next;
            }
            else{
                // res=res->next;
                res->next=l1;
                return ans->next;
                
            }
        }
        while(l2)
        {
            if(carry)
           { int sum=l2->val+carry;
            int rem=sum%10;
            carry=sum/10;
            ListNode*temp=new ListNode(rem);
            res->next=temp;
            res=res->next;
            l2=l2->next;
            }
            else{
                // res=res->next;
                res->next=l2;
                 return ans->next;
            }
        }
        if(carry)
        {
            ListNode*temp=new ListNode(carry);
            res->next=temp;
            
        }
        return ans->next;
    }
};