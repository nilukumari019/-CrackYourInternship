/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1==nullptr)
        return list2;
        if(list2==nullptr)
        return list1;
        ListNode*ans=new ListNode(-1);
        if(list1->val<list2->val)
        {
            ans->next=list1;
            list1=list1->next;
        }
        else
        {   ans->next=list2;
            list2=list2->next;
        }
        ListNode*curr=ans;
        while(list1 && list2)
        {
            if(list1->val<list2->val)
            {
                curr=curr->next;
                curr->next=list1;
                list1=list1->next;
            }
            else{
                curr=curr->next;
                curr->next=list2;
                list2=list2->next;
            }
        }
        if(list1)
        {
            curr=curr->next;
            curr->next=list1;
        }else{
            curr=curr->next;
            curr->next=list2;
        }
        return ans->next;

    }
};